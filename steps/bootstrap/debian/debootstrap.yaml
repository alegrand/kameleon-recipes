- select_empty_port:
  - on_checkpoint: redo
  - exec_local: |
      # Find empty SSH forwarding port
      SSH_FWD_PORT=$(__find_free_port 50000 60000)
      echo "SSH forwarding port: $SSH_FWD_PORT"

- prepare_ssh_config:
  - on_bootstrap_init:
    - write_local:
      - $${ssh_config_file}
      - |
        Host $${kameleon_recipe_name}
        HostName 127.0.0.1
        Port ${SSH_FWD_PORT}
        User root
        UserKnownHostsFile /dev/null
        StrictHostKeyChecking no
        PasswordAuthentication no
        IdentitiesOnly yes
        LogLevel FATAL
        ForwardAgent yes
        Compression yes
        Protocol 2

- partition_disk:
  - check_cmd_out: parted
  - exec_out: |
      echo "Partitioning disk..."
      parted -s $${disk_device} mklabel msdos
      parted -s -a none $${disk_device} mkpart primary 64s 100%
      parted -s $${disk_device} set 1 boot on
  - exec_out: |
      echo Creating root partition...
      mkfs.$${filesystem_type} -q $${disk_device}1 || fail cannot create / ext4

- mount_mountdir:
  - on_checkpoint: redo
  - exec_out: mkdir -p $${rootfs}
  - exec_out: echo Mounting root partition...
  - exec_out: mount $${disk_device}1 $${rootfs} || fail cannot mount /
  - on_setup_clean:
    - exec_out: sync
    - umount_out: $${rootfs}

- run_debootstrap_script:
  - local2out:
    - $${bootstrap_script}
    - /tmp/debootstrap.sh
  - exec_out: |
      RELEASE=$${release} \
      PACKAGES="$${bootstrap_packages}" \
      DEBIAN_MIRROR_URI="$${debian_mirror_uri}" \
      ARCH="$${arch}" \
      DEBIAN_ARCH="$${debian_arch}" \
      DEBIAN_KERNEL_ARCH="$${debian_kernel_arch}" \
      CHROOT_DIR="$${rootfs}" \
      VARIANT="$${bootstrap_variant}" \
      PROXY=$${proxy_out}
      bash /tmp/debootstrap.sh
  - on_setup_clean:
    - exec_out: rm -f /tmp/debootstrap.sh
